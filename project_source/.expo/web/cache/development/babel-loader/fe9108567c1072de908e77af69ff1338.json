{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Repos\\\\iWallet\\\\iWallet\\\\src\\\\screens\\\\IntroScreen\\\\IndexScreen.jsx\";\n\nimport { useTheme, useThemeDispatch } from '@pavelgric/react-native-theme-provider';\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport IButton from \"../../components/Button\";\nimport RegularText from \"../../components/RegularText\";\nimport Logo from \"../../components/Logo\";\n\nvar IndexScreen = function IndexScreen(props) {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentScreen = _useState2[0],\n      setCurrentScreen = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      screens = _useState4[0],\n      setScreens = _useState4[1];\n\n  var nextScreen = function nextScreen() {\n    if (function (currentScreen) {\n      return screens.length;\n    }) {\n      props.onNext();\n    } else {\n      setCurrentScreen(currentScreen + 1);\n    }\n  };\n\n  var _useTheme = useTheme(),\n      selectedTheme = _useTheme.selectedTheme,\n      themes = _useTheme.themes,\n      t = _useTheme.t;\n\n  var _useThemeDispatch = useThemeDispatch(),\n      setTheme = _useThemeDispatch.setTheme;\n\n  var toggleTheme = function toggleTheme() {\n    var nextTheme = selectedTheme === 'dark' ? 'light' : 'dark';\n    setTheme(nextTheme);\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, React.createElement(Logo, {\n    withImage: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }), React.createElement(Logo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }), React.createElement(RegularText, {\n    text: \"Hello\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), React.createElement(IButton, {\n    onTap: toggleTheme.bind(_this),\n    text: \"Theme\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default IndexScreen;","map":{"version":3,"sources":["D:/Repos/iWallet/iWallet/src/screens/IntroScreen/IndexScreen.jsx"],"names":["useTheme","useThemeDispatch","React","useState","IButton","RegularText","Logo","IndexScreen","props","currentScreen","setCurrentScreen","screens","setScreens","nextScreen","length","onNext","selectedTheme","themes","t","setTheme","toggleTheme","nextTheme","bind"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,gBAAnB,QAA2C,wCAA3C;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,OAAOC,OAAP;AACA,OAAOC,WAAP;AACA,OAAOC,IAAP;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC3B,kBAA0CL,QAAQ,CAAC,CAAD,CAAlD;AAAA;AAAA,MAAOM,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,mBAA8BP,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOQ,OAAP;AAAA,MAAgBC,UAAhB;;AACA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrB,QAAG,UAAAJ,aAAa;AAAA,aAAIE,OAAO,CAACG,MAAZ;AAAA,KAAhB,EAAoC;AAChCN,MAAAA,KAAK,CAACO,MAAN;AACH,KAFD,MAEO;AACHL,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACH;AACJ,GAND;;AAOA,kBAAoCT,QAAQ,EAA5C;AAAA,MAAQgB,aAAR,aAAQA,aAAR;AAAA,MAAuBC,MAAvB,aAAuBA,MAAvB;AAAA,MAA+BC,CAA/B,aAA+BA,CAA/B;;AACA,0BAAmBjB,gBAAgB,EAAnC;AAAA,MAAOkB,QAAP,qBAAOA,QAAP;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,QAAMC,SAAS,GAAGL,aAAa,KAAK,MAAlB,GAA2B,OAA3B,GAAoC,MAAtD;AACAG,IAAAA,QAAQ,CAACE,SAAD,CAAR;AACH,GAHD;;AAMA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAE,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAED,WAAW,CAACE,IAAZ,CAAiB,KAAjB,CAAhB;AAAwC,IAAA,IAAI,EAAC,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAQH,CA3BD;;AA6BA,eAAef,WAAf","sourcesContent":["import { useTheme, useThemeDispatch } from '@pavelgric/react-native-theme-provider'\r\nimport React, { useState } from 'react'\r\nimport { View, Text, Alert} from 'react-native'\r\nimport IButton from '../../components/Button'\r\nimport RegularText from '../../components/RegularText'\r\nimport Logo from '../../components/Logo'\r\n\r\nconst IndexScreen = (props) => {\r\n    const [currentScreen, setCurrentScreen] = useState(0)\r\n    const [screens, setScreens] = useState([])\r\n    const nextScreen = () => {\r\n        if(currentScreen => screens.length) {\r\n            props.onNext()\r\n        } else {\r\n            setCurrentScreen(currentScreen + 1)\r\n        }\r\n    }\r\n    const { selectedTheme, themes, t} = useTheme()\r\n    const {setTheme} = useThemeDispatch()\r\n    \r\n    const toggleTheme = () => {\r\n        const nextTheme = selectedTheme === 'dark' ? 'light': 'dark'\r\n        setTheme(nextTheme)\r\n    }\r\n\r\n    \r\n    return (\r\n        <View>\r\n            <Logo withImage={true}/>\r\n            <Logo/>\r\n            <RegularText text=\"Hello\"/>\r\n            <IButton onTap={toggleTheme.bind(this)} text=\"Theme\"/>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default IndexScreen"]},"metadata":{},"sourceType":"module"}