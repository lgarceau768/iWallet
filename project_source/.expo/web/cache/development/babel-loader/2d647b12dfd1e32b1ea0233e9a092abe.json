{"ast":null,"code":"import { persistStore, persistReducer } from 'redux-persist';\nimport { createStore, combineReducers } from 'redux';\nimport storage from '@react-native-async-storage/async-storage';\nimport { stateSetter } from \"./depth\";\n\nvar smart_reducer = function smart_reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return stateSetter(state, action.type, action.payload);\n};\n\nvar reducers = combineReducers({\n  RN: smart_reducer\n});\nvar persistConfig = {\n  key: 'RN',\n  storage: storage,\n  whitelist: ['RN']\n};\nvar persistedReducer = persistReducer(persistConfig, reducers);\nexport var RootStore = createStore(persistedReducer);\nexport var AppPersistor = persistStore(RootStore);","map":{"version":3,"sources":["D:/Repos/iWallet/iwallet/node_modules/react-native-redux/src/config.tsx"],"names":["persistStore","persistReducer","createStore","combineReducers","storage","stateSetter","smart_reducer","state","action","type","payload","reducers","RN","persistConfig","key","whitelist","persistedReducer","RootStore","AppPersistor"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,OAAP,MAAoB,2CAApB;AACA,SAASC,WAAT;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,MAACC,KAAD,uEAAS,EAAT;AAAA,MAAaC,MAAb;AAAA,SAAwBH,WAAW,CAACE,KAAD,EAAQC,MAAM,CAACC,IAAf,EAAqBD,MAAM,CAACE,OAA5B,CAAnC;AAAA,CAAtB;;AACA,IAAMC,QAAQ,GAAGR,eAAe,CAAC;AAAES,EAAAA,EAAE,EAAEN;AAAN,CAAD,CAAhC;AACA,IAAMO,aAAa,GAAG;AAAEC,EAAAA,GAAG,EAAE,IAAP;AAAaV,EAAAA,OAAO,EAAPA,OAAb;AAAsBW,EAAAA,SAAS,EAAE,CAAC,IAAD;AAAjC,CAAtB;AACA,IAAMC,gBAAgB,GAAGf,cAAc,CAACY,aAAD,EAAgBF,QAAhB,CAAvC;AACA,OAAO,IAAMM,SAAS,GAAGf,WAAW,CAACc,gBAAD,CAA7B;AACP,OAAO,IAAME,YAAY,GAAGlB,YAAY,CAACiB,SAAD,CAAjC","sourcesContent":["import { persistStore, persistReducer } from 'redux-persist';\nimport { createStore, combineReducers } from 'redux';\nimport storage from '@react-native-async-storage/async-storage';\nimport { stateSetter } from './depth';\n\nconst smart_reducer = (state = {}, action) => stateSetter(state, action.type, action.payload);\nconst reducers = combineReducers({ RN: smart_reducer });\nconst persistConfig = { key: 'RN', storage, whitelist: ['RN'] };\nconst persistedReducer = persistReducer(persistConfig, reducers);\nexport const RootStore = createStore(persistedReducer);\nexport const AppPersistor = persistStore(RootStore);\n"]},"metadata":{},"sourceType":"module"}