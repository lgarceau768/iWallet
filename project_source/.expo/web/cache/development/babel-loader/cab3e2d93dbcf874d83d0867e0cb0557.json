{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Repos\\\\iWallet\\\\iWallet\\\\App.js\";\nimport React, { useState } from 'react';\nimport Themes from \"./src/util/Themes\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as Font from 'expo-font';\nimport AppLoading from 'expo-app-loading';\nimport { Provider } from 'react-redux';\nimport Logo from \"./src/components/Logo\";\nimport UserReducer from \"./src/reducer/UserReducer\";\nimport IButton from \"./src/components/Button\";\nimport ThemeContainer from \"./src/components/ThemeContainer\";\nimport RegularText from \"./src/components/RegularText\";\nimport { useTheme, useThemeDispatch } from '@pavelgric/react-native-theme-provider';\nimport { createStore } from 'redux';\nimport IndexScreen from \"./src/screens/IntroScreen/IndexScreen\";\nvar store = createStore(UserReducer);\n\nfunction App() {\n  var fetchFonts = function fetchFonts() {\n    return Font.loadAsync({\n      'Lato': require(\"./assets/fonts/Lato-Regular.ttf\"),\n      'Lato-Bold': require(\"./assets/fonts/Lato-Bold.ttf\"),\n      'Lato-Light': require(\"./assets/fonts/Lato-Light.ttf\")\n    });\n  };\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fontloaded = _useState2[0],\n      setfontloaded = _useState2[1];\n\n  if (!fontloaded) {\n    return React.createElement(AppLoading, {\n      startAsync: fetchFonts,\n      onFinish: function onFinish() {\n        setfontloaded(true);\n      },\n      onError: console.warn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, React.createElement(ThemeContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, React.createElement(IndexScreen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Repos/iWallet/iWallet/App.js"],"names":["React","useState","Themes","Font","AppLoading","Provider","Logo","UserReducer","IButton","ThemeContainer","RegularText","useTheme","useThemeDispatch","createStore","IndexScreen","store","App","fetchFonts","loadAsync","require","fontloaded","setfontloaded","console","warn"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP;;;AAKA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAGA,OAAOC,IAAP;AACA,OAAOC,WAAP;AAGA,OAAOC,OAAP;AACA,OAAOC,cAAP;AACA,OAAOC,WAAP;AACA,SAASC,QAAT,EAAmBC,gBAAnB,QAA2C,wCAA3C;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,WAAP;AAGA,IAAMC,KAAK,GAAGF,WAAW,CAACN,WAAD,CAAzB;;AAKA,SAASS,GAAT,GAAe;AACb,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,WAAOd,IAAI,CAACe,SAAL,CAAe;AACtB,cAAQC,OAAO,mCADO;AAEtB,mBAAaA,OAAO,gCAFE;AAGtB,oBAAcA,OAAO;AAHC,KAAf,CAAP;AAKD,GAND;;AAQE,kBAAmClB,QAAQ,CAAC,KAAD,CAA3C;AAAA;AAAA,MAAOmB,UAAP;AAAA,MAAkBC,aAAlB;;AAEF,MAAG,CAACD,UAAJ,EAAgB;AACd,WACE,oBAAC,UAAD;AACE,MAAA,UAAU,EAAEH,UADd;AAEE,MAAA,QAAQ,EAAE,oBAAI;AAACI,QAAAA,aAAa,CAAC,IAAD,CAAb;AAAoB,OAFrC;AAGE,MAAA,OAAO,EAAEC,OAAO,CAACC,IAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD;;AACD,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAER,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF;AASD;;AAKD,eAAeC,GAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport Themes from './src/util/Themes'\r\nimport {\r\n  Text,\r\n  View,\r\n} from 'react-native'\r\nimport * as Font from 'expo-font';\r\nimport AppLoading from 'expo-app-loading';\r\nimport { Provider } from 'react-redux'\r\n\r\n// Our Stuff\r\nimport Logo from './src/components/Logo'\r\nimport UserReducer from './src/reducer/UserReducer'\r\n\r\n// Testing imports\r\nimport IButton from './src/components/Button'\r\nimport ThemeContainer from './src/components/ThemeContainer'\r\nimport RegularText from './src/components/RegularText'\r\nimport { useTheme, useThemeDispatch } from '@pavelgric/react-native-theme-provider'\r\nimport { createStore } from 'redux'\r\nimport IndexScreen from './src/screens/IntroScreen/IndexScreen';\r\n\r\n// Setup User Data\r\nconst store = createStore(UserReducer)\r\n\r\n// Get Fonts\r\n\r\n\r\nfunction App() {\r\n  const fetchFonts = () => {\r\n    return Font.loadAsync({\r\n    'Lato': require('./assets/fonts/Lato-Regular.ttf'),\r\n    'Lato-Bold': require('./assets/fonts/Lato-Bold.ttf'),\r\n    'Lato-Light': require('./assets/fonts/Lato-Light.ttf'),\r\n    });\r\n  };\r\n  // state font fetch control \r\n    const [fontloaded,setfontloaded] = useState(false);\r\n  // Render iWallet App\r\n  if(!fontloaded) {\r\n    return (\r\n      <AppLoading\r\n        startAsync={fetchFonts}\r\n        onFinish={()=>{setfontloaded(true)}}\r\n        onError={console.warn}\r\n      />\r\n    )\r\n  }\r\n  return (\r\n    <Provider store={store}>\r\n      <ThemeContainer>\r\n        <View>\r\n          <IndexScreen/>\r\n        </View>\r\n      </ThemeContainer>\r\n    </Provider>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}